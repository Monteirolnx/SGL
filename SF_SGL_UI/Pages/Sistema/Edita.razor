@page "/sistemas/edita/{id:int}"

@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks

@inject HttpClient Http
@inject NavigationManager NavigationManager

<h2>Edita Sistema</h2>
<hr />

@if (sistema == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <form>
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label for="Nome" class="control-label">Nome</label>
                    <input for="Nome" class="form-control" @bind="@sistema.Nome" />
                </div>
                <div class="form-group">
                    <label for="UrlServicoConsultaLog" class="control-label">UrlServicoConsultaLog</label>
                    <input for="UrlServicoConsultaLog" class="form-control" @bind="@sistema.UrlServicoConsultaLog" />
                </div>
                <div class="form-group">
                    <label for="UsuarioLogin" class="control-label">UsuarioLogin</label>
                    <input for="UsuarioLogin" class="form-control" @bind="@sistema.UsuarioLogin" />
                </div>
                <div class="form-group">
                    <label for="UsuarioSenha" class="control-label">UsuarioSenha</label>
                    <input for="UsuarioSenha" class="form-control" @bind="sistema.UsuarioSenha" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@Atualiza" value="Atualiza" />
                <input type="button" class="btn" @onclick="@Cancela" value="Cancela" />
            </div>
        </div>
    </form>
}
<p>
    @exceptionMessage
</p>

@code {
    [Parameter] public int id { get; set; }

    private const string ServiceEndpointObtemSistemaPorId = "https://localhost:44338/api/Sistemas/ObtemSistemaPorId/";
    private const string ServiceEndpointEditaSistema = "https://localhost:44338/api/Sistemas/EditaSistema/";


    private Sistema sistema;
    private string exceptionMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            sistema = await Http.GetFromJsonAsync<Sistema>(string.Concat(ServiceEndpointObtemSistemaPorId, id));
        }
        catch (NotSupportedException exception)
        {
            exceptionMessage = exception.Message;
        }
    }

    protected async Task Atualiza()
    {
        try
        {
            await Http.PutAsJsonAsync(string.Concat(ServiceEndpointEditaSistema, id), sistema);
            NavigationManager.NavigateTo(nameof(sistema));
        }
        catch (NotSupportedException exception)
        {
            exceptionMessage = exception.Message;
        }
    }


    void Cancela()
    {
        NavigationManager.NavigateTo("sistema");
    }

    public class Sistema
    {
        public int Id { get; set; }

        public string Nome { get; set; }

        public string UrlServicoConsultaLog { get; set; }

        public string UsuarioLogin { get; set; }

        public string UsuarioSenha { get; set; }
    }
}
